name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      samba:
        image: dperson/samba:latest
        env:
          USER: testuser;testpass
          SHARE: testshare;/mnt/testshare;yes;no;no;testuser
          SMB: true
          NMBD: true
        ports:
          - 1445:445
          - 1137:137
          - 1138:138  
          - 1139:139
        options: >-
          --health-cmd "smbclient -L localhost -U testuser%testpass"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 30s

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Validate code
        run: |
          go fmt ./...
          go vet ./...
          go build -o bin/server ./cmd/server

      - name: Run tests
        env:
          SMB_SERVER_NAME: testserver
          SMB_SERVER_IP: localhost
          SMB_SHARE_NAME: testshare
          SMB_USERNAME: testuser
          SMB_PASSWORD: testpass
          SMB_PORT: 1445
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Generate coverage report
        run: |
          go tool cover -html=coverage.out -o coverage.html

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # set commit SHA with branch prefix for branch builds
            type=ref,event=branch,suffix=-{{sha}}
            # set commit SHA with pr prefix for PR builds  
            type=ref,event=pr,suffix=-{{sha}}
            # set pr-<number> for pull requests
            type=ref,event=pr,prefix=pr-
            # set branch name for non-main branches
            type=ref,event=branch
            # set tag name for tags
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=Document SMB Relay Service
            org.opencontainers.image.description=A Go-based HTTP service that accepts file uploads and writes them to SMB shares

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
